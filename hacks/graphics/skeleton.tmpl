{% extends "index.tmpl" %}
{% if not rootPath %}
{% set rootPath = "../../" %}
{% endif %}

{% block scripts %}
{{ super() }}<script src="{{rootPath}}src/thimble-focus.js"></script>
{% endblock %}

{% block last %}
<section class="assets">
  <h2>Assets</h2>
  <p>
    The graphics for this example were found or adapted from artwork at <a href="http://opengameart.org/">OpenGameArt.Org</a>,
    specifically <a href="http://opengameart.org/content/block-ninja-2d-sprites">this</a> and
    <a href="http://opengameart.org/content/little-angry-robot-drone">this</a> resource.
  </p>
  <img id="player-alive" src="{{rootPath}}hacks/graphics/ninja.png">
  <img id="player-dead" src="{{rootPath}}hacks/graphics/dead.png">
  <img id="robot-alive" src="{{rootPath}}hacks/graphics/bot-g.gif">
  <img id="robot-dead" src="{{rootPath}}hacks/graphics/bot-r.gif">
</section>
{% endblock %}

{% block main %}
<script>
var showHitArea = false;

Base.prototype.draw = function(ctx) {
  var image = this.images['alive'];
  if (this.dead || this.wreck) {
    image = this.images['dead'];
  }
  this.padding = this.padding || {x:0, y:0};
  var imageSize = {
    x: this.size.x + this.padding.x,
    y: this.size.y + this.padding.y
  };
  ctx.drawImage(image, 
    this.center.x - imageSize.x / 2,
    this.center.y - imageSize.y / 2,
    imageSize.x,
    imageSize.y);
  if (showHitArea) {
    ctx.fillStyle = "rgba(255, 0, 255, 0.5)";
    ctx.fillRect(this.center.x - this.size.x / 2,
      this.center.y - this.size.y / 2,
      this.size.x,
      this.size.y);
  }
};

function showMessage(msg) {
  var el = document.getElementById('message');
  el.style.display = "initial";
  el.textContent = msg;
}

window.addEventListener('load', function() {
  new Game({
    width: 500,
    height: 500,
    background: "steelblue",
    enemies: 5,
    player: {
      center: { x: 250, y: 250 },
      size: { x: 32, y: 32 },
      speed: { walk: 2.4, run: 3.6 },
      images: {
        alive: document.getElementById('player-alive'),
        dead: document.getElementById('player-dead')
      }
    },
    robot: {
      size: { x: 32, y: 30 },
      speed: { walk: 2.6 },
      attackStrategy: 'compass',
      waitStrategy: 'roam',
      images: {
        alive: document.getElementById('robot-alive'),
        dead: document.getElementById('robot-dead')
      }
    },
    win: function () {
      showMessage("You win!");
    },
    lose: function () {
      showMessage("You lose.");
    }
  });
});
</script>
{% endblock %}